package com.team404.controller;


import java.io.File;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.UUID;

import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import com.team404.command.UserVO;

@Controller
@RequestMapping("/snsBoard")
public class SnsBoardController {
	
	
	
	@RequestMapping("/snsList")
	public String snsList() {
		
		return "snsBoard/snsList";
	}
	
	@ResponseBody
	@RequestMapping("/upload")
	public String upload(
			@RequestParam("file") MultipartFile file,
						 @RequestParam("content") String content, HttpSession session) {
		try {
			UserVO vo = (UserVO)session.getAttribute("userVO");
			String writer = vo.getUserId();
			
			//1. 날짜별로 폴더로 관리
			Date date = new Date();
			SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMdd");
			String fileLoca = sdf.format(date);
			
			
			//2. 저장할 폴더
			String uploadPath = "D:\\course\\upload\\"+ fileLoca;
			
			
			File folder = new File(uploadPath);
			if(!folder.exists()) {
				folder.mkdir();
			}
			
			//3. 서버에 저장할 파일 이름
			String fileRealName =file.getOriginalFilename();
			Long size = file.getSize();			
			
			String fileExtention = fileRealName.substring(fileRealName.lastIndexOf("."), fileRealName.length());
			
			UUID uuid =UUID.randomUUID();
			String uuids = uuid.toString().replace("-", "");
			
			String fileName = uuids + fileExtention;//변경해서 저장할 파일 이름
			
			System.out.println("+=====================");
			System.out.println("저장할 폴더 :"+uploadPath);
			System.out.println("파일실제이름 : "+fileRealName);
			System.out.println("파일사이즈:"+size);
			System.out.println("확장자:"+fileExtention);
			System.out.println("변경해서저장할파일명:"+fileName);
			
			//4. 파일 업로드 처리
			File saveFile = new File(uploadPath+"\\"+fileName);
			file.transferTo(saveFile);
			
		} catch (NullPointerException e) {
			System.out.println("세션정보가 없음");
			return "fail";
		} catch(Exception e) {
			e.printStackTrace();
			return "fail";
		}
		
		return "ggg";
		
	}
}
